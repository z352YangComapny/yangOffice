plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ssoystory'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-netflix-eureka-client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.0.3'

	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'com.google.code.gson:gson:2.10.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-all
	implementation 'io.github.resilience4j:resilience4j-all:2.0.2'
	// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-spring-boot3
	implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.0.2'
	// https://mvnrepository.com/artifact/io.github.resilience4j/resilience4j-annotations
	implementation 'io.github.resilience4j:resilience4j-annotations:2.0.2'


}


tasks.named('test') {
	useJUnitPlatform()
}
