#Port & Name
server.port=8000
spring.application.name=gateway

#Redis
spring.data.redis.host=localhost
spring.data.redis.port=6379

#Eureka Client Enroll
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

#Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# Spring Cloud Gateway configuration
spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Origin
spring.cloud.gateway.default-filters[1]=DedupeResponseHeader=Access-Control-Allow-Credentials
spring.cloud.gateway.default-filters[2]=DedupeResponseHeader=Authorization

# Global CORS configuration
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-origins[0]=http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-headers[0]=*
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[0]=PUT
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[1]=GET
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[2]=POST
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[3]=DELETE
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.allowed-methods[4]=OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.'[/**]'.exposed-headers[0]=Authorization

# Global Filter
spring.cloud.gateway.default-filters[0].name=GlobalFilter
spring.cloud.gateway.default-filters[0].args.message=Gateway Global Filter Message
spring.cloud.gateway.default-filters[0].args.showPreLogger=true
spring.cloud.gateway.default-filters[0].args.showPostLogger=true

# Routing configuration
## Member
spring.cloud.gateway.routes[0].id=member-service
spring.cloud.gateway.routes[0].uri=http://localhost:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/member/**

spring.cloud.gateway.routes[1].id=dm-service
spring.cloud.gateway.routes[1].uri=http://localhost:8081
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/dm/**
spring.cloud.gateway.routes[1].filters[0]=JwtAuthorizationGatewayFilter=ROLE_USER

spring.cloud.gateway.routes[2].id=feed-service
spring.cloud.gateway.routes[2].uri=http://localhost:8082
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/feed/**
spring.cloud.gateway.routes[2].filters[0]=JwtAuthorizationGatewayFilter=ROLE_USER

spring.cloud.gateway.routes[3].id=profile-service
spring.cloud.gateway.routes[3].uri=http://localhost:8080
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/profile/**
spring.cloud.gateway.routes[3].filters[0]=JwtAuthorizationGatewayFilter=ROLE_USER

spring.cloud.gateway.routes[4].id=dm-socket-route
spring.cloud.gateway.routes[4].uri=lb:ws://localhost:8081
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/dm/**

spring.cloud.gateway.routes[5].id=story-service
spring.cloud.gateway.routes[5].uri=http://localhost:8083
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/story/**

spring.cloud.gateway.routes[6].id=guestbook-service
spring.cloud.gateway.routes[6].uri=http://localhost:8084
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/story/**
spring.cloud.gateway.routes[6].filters[0]=JwtAuthorizationGatewayFilter=ROLE_USER

spring.cloud.gateway.routes[7].id=follow-service
spring.cloud.gateway.routes[7].uri=http://localhost:8080
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/follow/**
spring.cloud.gateway.routes[7].filters[0]=JwtAuthorizationGatewayFilter=ROLE_USER